@baseUrl = http://localhost:3000/api

@customerToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk3ZGIzMzNlLTlmZTktNGNhOS1iNjEzLTM4YjY3Mzk4ZjBhMCIsInVzZXJUeXBlIjoiQ1VTVE9NRVIiLCJpYXQiOjE3NDU1NjY2NjAsImV4cCI6MTc0ODE1ODY2MH0.I1DHSBv3M1_1jgHqSJCyQudAS65b53P1gg47gMHt64E

@driverToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImM0YzJhZjMzLWRkZTktNDU2Ni04N2JiLWE0OTYyN2Q1OWY0ZiIsInVzZXJUeXBlIjoiRFJJVkVSIiwiaWF0IjoxNzQ1NTY2NzA5LCJleHAiOjE3NDgxNTg3MDl9.4TGKOZy-8KjdJz6KjW0ZgExeLZ0CJmJdd8J-bannaF4

@customerId = 97db333e-9fe9-4ca9-b613-38b67398f0a0

@driverId = c4c2af33-dde9-4566-87bb-a49627d59f4f

### User Routes ###

### 1. Get Customer Profile
GET {{baseUrl}}/users/{{customerId}}
Authorization: Bearer {{customerToken}}

### 2. Get Driver Profile
GET {{baseUrl}}/users/{{driverId}}
Authorization: Bearer {{driverToken}}

### 3. Update Customer Profile
PUT {{baseUrl}}/users/{{customerId}}
Authorization: Bearer {{customerToken}}
Content-Type: application/json

{
    "name": "Updated Customer Name",
    "phone": "+1234567890"
}

### 4. Update Driver Profile
PUT {{baseUrl}}/users/{{driverId}}
Authorization: Bearer {{driverToken}}
Content-Type: application/json

{
    "name": "Updated Driver Name",
    "phone": "+1987654321",
    "licenseNumber": "DL654321",
    "isAvailable": true,
    "currentLocation": {
        "lat": 12.3456,
        "lng": 78.9012
    }
}

### 5. Delete Customer Account
DELETE {{baseUrl}}/users/{{customerId}}
Authorization: Bearer {{customerToken}}

### 6. Delete Driver Account
DELETE {{baseUrl}}/users/{{driverId}}
Authorization: Bearer {{driverToken}}

### 7. Trying to get non-existent user (should return 404)
GET {{baseUrl}}/users/non-existent-id
Authorization: Bearer {{customerToken}}

### 8. Trying to update with invalid data (should return 400)
PUT {{baseUrl}}/users/{{customerId}}
Authorization: Bearer {{customerToken}}
Content-Type: application/json

{
    "phone": "invalid-phone-number"
}

### 9. Trying to delete already deleted account (should return 404)
DELETE {{baseUrl}}/users/{{customerId}}
Authorization: Bearer {{customerToken}}